# Some of the most useful features in emacs-libvterm require shell-side
# configurations. The main goal of these additional functions is to enable the
# shell to send information to `vterm` via properly escaped sequences. A
# function that helps in this task, `vterm_printf`, is defined below.

function vterm_printf(){
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ] ); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

# With vterm_cmd you can execute Emacs commands directly from the shell.
# For example, vterm_cmd message "HI" will print "HI".
# To enable new commands, you have to customize Emacs's variable
# vterm-eval-cmds.
vterm_cmd() {
    local vterm_elisp
    vterm_elisp=""
    while [ $# -gt 0 ]; do
        vterm_elisp="$vterm_elisp""$(printf '"%s" ' "$(printf "%s" "$1" | sed -e 's|\\|\\\\|g' -e 's|"|\\"|g')")"
        shift
    done
    vterm_printf "51;E$vterm_elisp"
}

# This is to change the title of the buffer based on information provided by the
# shell. See, http://tldp.org/HOWTO/Xterm-Title-4.html, for the meaning of the
# various symbols.
# autoload -U add-zsh-hook
# add-zsh-hook -Uz chpwd (){ print -Pn "\e]2;%m:%2~\a" }

# Sync directory and host in the shell with Emacs's current directory.
# You may need to manually specify the hostname instead of $(hostname) in case
# $(hostname) does not return the correct string to connect to the server.
#
# The escape sequence "51;A" has also the role of identifying the end of the
# prompt
vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}

# Completely clear the buffer. With this, everything that is not on screen
# is erased.
radian_after_init_hook() {
    if [[ "$INSIDE_EMACS" == 'vterm' ]]; then
      alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
      PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'
    fi
    alias hig="history | grep"
    alias nwemacs='TERM=xterm-24bits emacs -nw'

    if [[ $(hostname -d) = "frontier.olcf.ornl.gov" ]]; then
        source /etc/zsh.zshrc.local
    fi
}
export PATH=~/.local/share/znap/junegunn/fzf/bin:/ccs/home/pdoak/.local/share/znap/junegunn/fzf/bin:/lustre/orion/cph102/proj-shared/epd/fresh-spack/opt/spack/linux-zen3/zsh-5.9-h4blbp5thq7y7ha7qlao3ja67kz7pxk6/bin:/lustre/orion/cph102/proj-shared/epd/fresh-spack/opt/spack/linux-zen3/ncurses-6.5-qplgsljiw6l2vsn5h7hyzmjtliyz2g3n/bin:/lustre/orion/cph102/proj-shared/epd/fresh-spack/opt/spack/linux-zen3/pcre-8.45-tbat3uk7catgjtlydl6c4qguyevhyfbt/bin:/lustre/orion/cph102/proj-shared/epd/fresh-spack/bin:/sw/frontier/lfs-wrapper/0.0.1/bin/lfs:/sw/sources/hpss/bin:/sw/frontier/spack-envs/cpe24.11-cpu/opt/cce-18.0.1/darshan-runtime-3.4.6-ymnx2jlqwdsmjgdiu6ldpyxmcenq2nks/bin:/sw/frontier/spack-envs/core-25.03/opt/gcc-13.2/tmux-3.4-fcqqko3j4ga67yuc7zxaqcwsix5hns2v/bin:/opt/cray/pe/mpich/8.1.31/ofi/crayclang/17.0/bin:/opt/cray/pe/mpich/8.1.31/bin:/opt/cray/pe/craype/2.7.33/bin:/opt/cray/pe/cce/18.0.1/binutils/x86_64/x86_64-pc-linux-gnu/bin:/opt/cray/pe/cce/18.0.1/binutils/cross/x86_64-aarch64/aarch64-linux-gnu/../bin:/opt/cray/pe/cce/18.0.1/utils/x86_64/bin:/opt/cray/pe/cce/18.0.1/bin:/opt/cray/pe/perftools/24.11.0/bin:/opt/cray/pe/papi/7.1.0.4/bin:/opt/cray/libfabric/1.22.0/bin:/opt/clmgr/sbin:/opt/clmgr/bin:/opt/sgi/sbin:/opt/sgi/bin:/sw/frontier/bin:/ccs/home/pdoak/.local/bin:/ccs/home/pdoak/bin:/usr/local/bin:/usr/bin:/bin:/opt/bin:/opt/c3/bin:/usr/lib/mit/bin:/opt/puppetlabs/bin:/opt/cray/pe/bin:/autofs/nccs-svm1_home1/pdoak/.local/share/znap/radian-software/wdx/bin
source <(fzf --zsh)
